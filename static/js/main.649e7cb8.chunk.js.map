{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","components/hooks/useLocalStorage.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputOnChange","event","target","value","reset","e","preventDefault","className","style","formGroup","type","pattern","title","required","onChange","Button","variant","startIcon","useStyles","makeStyles","root","background","border","borderRadius","color","padding","margin","cursor","ContactItem","onClick","classes","ContactList","contacts","onDeleteContact","map","id","listItem","Filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","newContact","contact","toLowerCase","includes","toast","warn","addContact","uuidv4","success","contactName","currentTarget","normalizedFilter","getVisibleContacts","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.649e7cb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ContactForm_formGroup__A2L8L\",\"form-group\":\"ContactForm_form-group__2TnOi\",\"button\":\"ContactForm_button__2oSpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2HkI4\",\"listItem\":\"ContactList_listItem__3dydh\"};","import { useState } from 'react';\nimport style from './ContactForm.module.css';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputOnChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={style.formGroup}>\n        <label>\n          Name{' '}\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleInputOnChange}\n          />\n        </label>\n\n        <label>\n          Number{' '}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleInputOnChange}\n          />\n        </label>\n      </div>\n\n      <Button type=\"submit\" variant=\"contained\" startIcon={<AddIcon />}>\n        Add contact\n      </Button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'grey',\n    border: 0,\n    borderRadius: 3,\n    color: 'black',\n    padding: '2px 5px',\n    margin: '5px 15px',\n    cursor: 'pointer',\n  },\n});\n\nconst ContactItem = ({ name, number, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {name}: {number}\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.root}\n        startIcon={<DeleteIcon />}\n        onClick={onClick}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactList.module.css';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ol>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={style.listItem}>\n        <ContactItem\n          name={name}\n          number={number}\n          onClick={() => onDeleteContact(id)}\n        />\n      </li>\n    ))}\n  </ol>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.shape.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      {' '}\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n// import initialContacts from './data/contacts.json';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from './components/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useLocalStorage from './components/hooks/useLocalStorage';\n\nexport default function App() {\n  // Объявление новой переменной состояния\n  const [contacts, setContacts] = useLocalStorage('contacts', '');\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = newContact => {\n    const similarName = contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(newContact.name.toLowerCase());\n\n    const notifyWarn = () =>\n      toast.warn(`${newContact.name} is already in phonebook !`);\n\n    const notifySuccess = () =>\n      toast.success(`${newContact.name} is added in phonebook !`);\n\n    if (similarName) {\n      notifyWarn();\n    } else {\n      const addContact = {\n        id: uuidv4(),\n        ...newContact,\n      };\n      notifySuccess();\n\n      setContacts(contacts => [...contacts, addContact]);\n    }\n  };\n\n  const onDeleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const seachContactByName = contactName => {\n    setFilter(contactName.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <div className=\"Container\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n\n      <Filter value={filter} onChange={seachContactByName} />\n\n      <h2>Contacts</h2>\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={onDeleteContact}\n      />\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable={false}\n      />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}